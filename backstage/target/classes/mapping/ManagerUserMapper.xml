<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinghai.datingticket.backstage.dao.ManagerUserMapper" >
  <resultMap id="BaseResultMap" type="com.yinghai.datingticket.backstage.model.ManagerUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="m_name" property="mName" jdbcType="VARCHAR" />
    <result column="m_password" property="mPassword" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_verified" property="emailVerified" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, m_name, m_password, email, email_verified, create_time, update_time, role_id, 
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from manager_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manager_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yinghai.datingticket.backstage.model.ManagerUser" >
    insert into manager_user (id, m_name, m_password, 
      email, email_verified, create_time, 
      update_time, role_id, remark
      )
    values (#{id,jdbcType=INTEGER}, #{mName,jdbcType=VARCHAR}, #{mPassword,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{emailVerified,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinghai.datingticket.backstage.model.ManagerUser" >
    insert into manager_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mName != null" >
        m_name,
      </if>
      <if test="mPassword != null" >
        m_password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailVerified != null" >
        email_verified,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mName != null" >
        #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mPassword != null" >
        #{mPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinghai.datingticket.backstage.model.ManagerUser" >
    update manager_user
    <set >
      <if test="mName != null" >
        m_name = #{mName,jdbcType=VARCHAR},
      </if>
      <if test="mPassword != null" >
        m_password = #{mPassword,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        email_verified = #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinghai.datingticket.backstage.model.ManagerUser" >
    update manager_user
    set m_name = #{mName,jdbcType=VARCHAR},
      m_password = #{mPassword,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      email_verified = #{emailVerified,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>